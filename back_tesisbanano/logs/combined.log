{"level":"info","message":"Server is running on port 4000","service":"Tesis app","timestamp":"2024-01-18 21:51:43"}
{"level":"info","message":"Server is running on port 4000","service":"Tesis app","timestamp":"2024-01-18 21:53:19"}
{"level":"info","message":"getaddrinfo ENOTFOUND mysql","service":"Tesis app","timestamp":"2024-01-18 22:01:31"}
{"level":"error","message":"getaddrinfo ENOTFOUND mysql","name":"SequelizeHostNotFoundError","original":{"code":"ENOTFOUND","errno":-3008,"fatal":true,"hostname":"mysql","syscall":"getaddrinfo"},"parent":{"code":"ENOTFOUND","errno":-3008,"fatal":true,"hostname":"mysql","syscall":"getaddrinfo"},"service":"Tesis app","stack":"SequelizeHostNotFoundError: getaddrinfo ENOTFOUND mysql\n    at ConnectionManager.connect (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\mysql\\connection-manager.js:96:17)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async ConnectionManager._connect (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\connection-manager.js:222:24)\n    at async C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\connection-manager.js:174:32\n    at async ConnectionManager.getConnection (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\connection-manager.js:197:7)\n    at async C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\sequelize.js:305:26\n    at async MySQLQueryInterface.select (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:407:12)\n    at async User.findAll (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1140:21)\n    at async User.findOne (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1240:12)\n    at async signin (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\auth_controller.js:28:18)","timestamp":"2024-01-18 22:01:31"}
{"level":"info","message":"Server is running on port 4000","service":"Tesis app","timestamp":"2024-01-18 22:05:28"}
{"level":"info","message":"getaddrinfo ENOTFOUND mysql","service":"Tesis app","timestamp":"2024-01-18 22:05:32"}
{"level":"error","message":"getaddrinfo ENOTFOUND mysql","name":"SequelizeHostNotFoundError","original":{"code":"ENOTFOUND","errno":-3008,"fatal":true,"hostname":"mysql","syscall":"getaddrinfo"},"parent":{"code":"ENOTFOUND","errno":-3008,"fatal":true,"hostname":"mysql","syscall":"getaddrinfo"},"service":"Tesis app","stack":"SequelizeHostNotFoundError: getaddrinfo ENOTFOUND mysql\n    at ConnectionManager.connect (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\mysql\\connection-manager.js:96:17)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async ConnectionManager._connect (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\connection-manager.js:222:24)\n    at async C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\connection-manager.js:174:32\n    at async ConnectionManager.getConnection (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\connection-manager.js:197:7)\n    at async C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\sequelize.js:305:26\n    at async MySQLQueryInterface.select (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:407:12)\n    at async User.findAll (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1140:21)\n    at async User.findOne (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1240:12)\n    at async signin (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\auth_controller.js:28:18)","timestamp":"2024-01-18 22:05:32"}
{"level":"info","message":"Server is running on port 4000","service":"Tesis app","timestamp":"2024-01-18 22:44:14"}
{"level":"info","message":"Access denied for user 'user'@'%' to database 'planeacionsiembra'","service":"Tesis app","timestamp":"2024-01-18 22:44:17"}
{"level":"error","message":"Access denied for user 'user'@'%' to database 'planeacionsiembra'","name":"SequelizeConnectionError","original":{"code":"ER_DBACCESS_DENIED_ERROR","errno":1044,"sqlMessage":"Access denied for user 'user'@'%' to database 'planeacionsiembra'","sqlState":"42000"},"parent":{"code":"ER_DBACCESS_DENIED_ERROR","errno":1044,"sqlMessage":"Access denied for user 'user'@'%' to database 'planeacionsiembra'","sqlState":"42000"},"service":"Tesis app","stack":"SequelizeConnectionError: Access denied for user 'user'@'%' to database 'planeacionsiembra'\n    at ConnectionManager.connect (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\mysql\\connection-manager.js:102:17)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async ConnectionManager._connect (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\connection-manager.js:222:24)\n    at async C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\connection-manager.js:174:32\n    at async ConnectionManager.getConnection (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\connection-manager.js:197:7)\n    at async C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\sequelize.js:305:26\n    at async MySQLQueryInterface.select (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:407:12)\n    at async User.findAll (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1140:21)\n    at async User.findOne (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1240:12)\n    at async signin (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\auth_controller.js:28:18)","timestamp":"2024-01-18 22:44:17"}
{"level":"info","message":"Server is running on port 4000","service":"Tesis app","timestamp":"2024-01-18 22:44:55"}
{"level":"info","message":"Server is running on port 4000","service":"Tesis app","timestamp":"2024-01-18 22:45:26"}
{"level":"info","message":"User not found","service":"Tesis app","timestamp":"2024-01-18 22:45:27"}
{"code":404,"level":"error","message":"User not found","service":"Tesis app","stack":"Error: User not found\n    at signin (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\auth_controller.js:60:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-01-18 22:45:27"}
{"level":"info","message":"Server is running on port 4000","service":"Tesis app","timestamp":"2024-01-18 22:45:51"}
{"level":"info","message":"User not found","service":"Tesis app","timestamp":"2024-01-18 22:45:51"}
{"code":404,"level":"error","message":"User not found","service":"Tesis app","stack":"Error: User not found\n    at signin (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\auth_controller.js:60:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-01-18 22:45:51"}
{"level":"info","message":"Server is running on port 4000","service":"Tesis app","timestamp":"2024-01-18 22:46:48"}
{"level":"info","message":"User not found","service":"Tesis app","timestamp":"2024-01-18 22:46:54"}
{"code":404,"level":"error","message":"User not found","service":"Tesis app","stack":"Error: User not found\n    at signin (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\auth_controller.js:60:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-01-18 22:46:54"}
{"level":"debug","message":"Executing (default): SELECT `User`.*, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode`, `UserRoles->Role->RolePermissions`.`IdRolPermiso` AS `UserRoles.Role.RolePermissions.id`, `UserRoles->Role->RolePermissions->Permission`.`IdPermisos` AS `UserRoles.Role.RolePermissions.Permission.id`, `UserRoles->Role->RolePermissions->Permission`.`NombrePermisos` AS `UserRoles.Role.RolePermissions.Permission.permissionName`, `UserRoles->Role->RolePermissions->Permission`.`Descripcion` AS `UserRoles.Role.RolePermissions.Permission.description` FROM (SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state` FROM `usuarios` AS `User` WHERE `User`.`CorreoElectronico` = 'angie19980925@gmail.com' LIMIT 1) AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`id` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` LEFT OUTER JOIN `RolesPermisos` AS `UserRoles->Role->RolePermissions` ON `UserRoles->Role`.`IdRol` = `UserRoles->Role->RolePermissions`.`IdRol` LEFT OUTER JOIN `Permisos` AS `UserRoles->Role->RolePermissions->Permission` ON `UserRoles->Role->RolePermissions`.`IdPermiso` = `UserRoles->Role->RolePermissions->Permission`.`IdPermisos`;","service":"Tesis app","timestamp":"2024-01-18 22:48:32"}
{"level":"info","message":"User not found","service":"Tesis app","timestamp":"2024-01-18 22:48:32"}
{"code":404,"level":"error","message":"User not found","service":"Tesis app","stack":"Error: User not found\n    at signin (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\auth_controller.js:60:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-01-18 22:48:32"}
{"level":"debug","message":"Executing (default): SELECT `User`.*, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode`, `UserRoles->Role->RolePermissions`.`IdRolPermiso` AS `UserRoles.Role.RolePermissions.id`, `UserRoles->Role->RolePermissions->Permission`.`IdPermisos` AS `UserRoles.Role.RolePermissions.Permission.id`, `UserRoles->Role->RolePermissions->Permission`.`NombrePermisos` AS `UserRoles.Role.RolePermissions.Permission.permissionName`, `UserRoles->Role->RolePermissions->Permission`.`Descripcion` AS `UserRoles.Role.RolePermissions.Permission.description` FROM (SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state` FROM `usuarios` AS `User` WHERE `User`.`CorreoElectronico` = 'angie19980925@gmail.com' LIMIT 1) AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`id` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` LEFT OUTER JOIN `RolesPermisos` AS `UserRoles->Role->RolePermissions` ON `UserRoles->Role`.`IdRol` = `UserRoles->Role->RolePermissions`.`IdRol` LEFT OUTER JOIN `Permisos` AS `UserRoles->Role->RolePermissions->Permission` ON `UserRoles->Role->RolePermissions`.`IdPermiso` = `UserRoles->Role->RolePermissions->Permission`.`IdPermisos`;","service":"Tesis app","timestamp":"2024-01-18 22:49:57"}
{"level":"info","message":"User not found","service":"Tesis app","timestamp":"2024-01-18 22:49:57"}
{"code":404,"level":"error","message":"User not found","service":"Tesis app","stack":"Error: User not found\n    at signin (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\auth_controller.js:60:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-01-18 22:49:57"}
{"level":"info","message":"Server is running on port 4000","service":"Tesis app","timestamp":"2024-01-18 22:51:00"}
{"level":"debug","message":"Executing (default): SELECT `User`.*, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode`, `UserRoles->Role->RolePermissions`.`IdRolPermiso` AS `UserRoles.Role.RolePermissions.id`, `UserRoles->Role->RolePermissions->Permission`.`IdPermisos` AS `UserRoles.Role.RolePermissions.Permission.id`, `UserRoles->Role->RolePermissions->Permission`.`NombrePermisos` AS `UserRoles.Role.RolePermissions.Permission.permissionName`, `UserRoles->Role->RolePermissions->Permission`.`Descripcion` AS `UserRoles.Role.RolePermissions.Permission.description` FROM (SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state` FROM `Usuarios` AS `User` WHERE `User`.`CorreoElectronico` = 'angie19980925@gmail.com' LIMIT 1) AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`id` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` LEFT OUTER JOIN `RolesPermisos` AS `UserRoles->Role->RolePermissions` ON `UserRoles->Role`.`IdRol` = `UserRoles->Role->RolePermissions`.`IdRol` LEFT OUTER JOIN `Permisos` AS `UserRoles->Role->RolePermissions->Permission` ON `UserRoles->Role->RolePermissions`.`IdPermiso` = `UserRoles->Role->RolePermissions->Permission`.`IdPermisos`;","service":"Tesis app","timestamp":"2024-01-18 22:52:05"}
{"level":"info","message":"User not found","service":"Tesis app","timestamp":"2024-01-18 22:52:05"}
{"code":404,"level":"error","message":"User not found","service":"Tesis app","stack":"Error: User not found\n    at signin (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\auth_controller.js:60:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-01-18 22:52:05"}
{"level":"debug","message":"Executing (default): SELECT `User`.*, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode`, `UserRoles->Role->RolePermissions`.`IdRolPermiso` AS `UserRoles.Role.RolePermissions.id`, `UserRoles->Role->RolePermissions->Permission`.`IdPermisos` AS `UserRoles.Role.RolePermissions.Permission.id`, `UserRoles->Role->RolePermissions->Permission`.`NombrePermisos` AS `UserRoles.Role.RolePermissions.Permission.permissionName`, `UserRoles->Role->RolePermissions->Permission`.`Descripcion` AS `UserRoles.Role.RolePermissions.Permission.description` FROM (SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state` FROM `Usuarios` AS `User` WHERE `User`.`CorreoElectronico` = 'angie19980925@gmail.com' LIMIT 1) AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`id` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` LEFT OUTER JOIN `RolesPermisos` AS `UserRoles->Role->RolePermissions` ON `UserRoles->Role`.`IdRol` = `UserRoles->Role->RolePermissions`.`IdRol` LEFT OUTER JOIN `Permisos` AS `UserRoles->Role->RolePermissions->Permission` ON `UserRoles->Role->RolePermissions`.`IdPermiso` = `UserRoles->Role->RolePermissions->Permission`.`IdPermisos`;","service":"Tesis app","timestamp":"2024-01-18 22:52:51"}
{"level":"info","message":"User not found","service":"Tesis app","timestamp":"2024-01-18 22:52:51"}
{"code":404,"level":"error","message":"User not found","service":"Tesis app","stack":"Error: User not found\n    at signin (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\auth_controller.js:60:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-01-18 22:52:51"}
{"level":"debug","message":"Executing (default): SELECT `User`.*, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode`, `UserRoles->Role->RolePermissions`.`IdRolPermiso` AS `UserRoles.Role.RolePermissions.id`, `UserRoles->Role->RolePermissions->Permission`.`IdPermisos` AS `UserRoles.Role.RolePermissions.Permission.id`, `UserRoles->Role->RolePermissions->Permission`.`NombrePermisos` AS `UserRoles.Role.RolePermissions.Permission.permissionName`, `UserRoles->Role->RolePermissions->Permission`.`Descripcion` AS `UserRoles.Role.RolePermissions.Permission.description` FROM (SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state` FROM `Usuarios` AS `User` WHERE `User`.`CorreoElectronico` = 'angie19980925@gmail.com' LIMIT 1) AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`id` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` LEFT OUTER JOIN `RolesPermisos` AS `UserRoles->Role->RolePermissions` ON `UserRoles->Role`.`IdRol` = `UserRoles->Role->RolePermissions`.`IdRol` LEFT OUTER JOIN `Permisos` AS `UserRoles->Role->RolePermissions->Permission` ON `UserRoles->Role->RolePermissions`.`IdPermiso` = `UserRoles->Role->RolePermissions->Permission`.`IdPermisos`;","service":"Tesis app","timestamp":"2024-01-18 22:53:38"}
{"level":"info","message":"User not found","service":"Tesis app","timestamp":"2024-01-18 22:53:38"}
{"code":404,"level":"error","message":"User not found","service":"Tesis app","stack":"Error: User not found\n    at signin (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\auth_controller.js:60:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2024-01-18 22:53:38"}
{"level":"debug","message":"Executing (default): SELECT `User`.*, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode`, `UserRoles->Role->RolePermissions`.`IdRolPermiso` AS `UserRoles.Role.RolePermissions.id`, `UserRoles->Role->RolePermissions->Permission`.`IdPermisos` AS `UserRoles.Role.RolePermissions.Permission.id`, `UserRoles->Role->RolePermissions->Permission`.`NombrePermisos` AS `UserRoles.Role.RolePermissions.Permission.permissionName`, `UserRoles->Role->RolePermissions->Permission`.`Descripcion` AS `UserRoles.Role.RolePermissions.Permission.description` FROM (SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state` FROM `Usuarios` AS `User` WHERE `User`.`CorreoElectronico` = 'angie19980925@gmail.com' LIMIT 1) AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`id` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` LEFT OUTER JOIN `RolesPermisos` AS `UserRoles->Role->RolePermissions` ON `UserRoles->Role`.`IdRol` = `UserRoles->Role->RolePermissions`.`IdRol` LEFT OUTER JOIN `Permisos` AS `UserRoles->Role->RolePermissions->Permission` ON `UserRoles->Role->RolePermissions`.`IdPermiso` = `UserRoles->Role->RolePermissions->Permission`.`IdPermisos`;","service":"Tesis app","timestamp":"2024-01-18 22:54:02"}
{"level":"debug","message":"Executing (default): SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Estado` AS `state`, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode` FROM `Usuarios` AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`IdUser` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` WHERE `User`.`IdUser` != 1;","service":"Tesis app","timestamp":"2024-01-18 22:54:12"}
{"level":"debug","message":"Executing (default): SELECT `IdTipoReporte` AS `id`, `NombreReporte` AS `reportName` FROM `TipoReporte` AS `ReportType`;","service":"Tesis app","timestamp":"2024-01-18 22:54:13"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 22:54:13"}
{"level":"info","message":"Table 'planeacionsiembra.TipoReporte' doesn't exist","service":"Tesis app","timestamp":"2024-01-18 22:54:13"}
{"level":"error","message":"Table 'planeacionsiembra.TipoReporte' doesn't exist","name":"SequelizeDatabaseError","original":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sql":"SELECT `IdTipoReporte` AS `id`, `NombreReporte` AS `reportName` FROM `TipoReporte` AS `ReportType`;","sqlMessage":"Table 'planeacionsiembra.TipoReporte' doesn't exist","sqlState":"42S02"},"parameters":{},"parent":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sql":"SELECT `IdTipoReporte` AS `id`, `NombreReporte` AS `reportName` FROM `TipoReporte` AS `ReportType`;","sqlMessage":"Table 'planeacionsiembra.TipoReporte' doesn't exist","sqlState":"42S02"},"service":"Tesis app","sql":"SELECT `IdTipoReporte` AS `id`, `NombreReporte` AS `reportName` FROM `TipoReporte` AS `ReportType`;","stack":"Error\n    at Query.run (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.select (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:407:12)\n    at async ReportType.findAll (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1140:21)\n    at async findAll (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\report_type_controller.js:8:26)","timestamp":"2024-01-18 22:54:13"}
{"level":"debug","message":"Executing (default): SELECT `IdPermisos` AS `id`, `NombrePermisos` AS `permissionName`, `Descripcion` AS `description` FROM `Permisos` AS `Permission`;","service":"Tesis app","timestamp":"2024-01-18 22:54:13"}
{"level":"info","message":"Table 'planeacionsiembra.Inventario' doesn't exist","service":"Tesis app","timestamp":"2024-01-18 22:54:13"}
{"level":"error","message":"Table 'planeacionsiembra.Inventario' doesn't exist","name":"SequelizeDatabaseError","original":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sql":"SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","sqlMessage":"Table 'planeacionsiembra.Inventario' doesn't exist","sqlState":"42S02"},"parameters":{},"parent":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sql":"SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","sqlMessage":"Table 'planeacionsiembra.Inventario' doesn't exist","sqlState":"42S02"},"service":"Tesis app","sql":"SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","stack":"Error\n    at Query.run (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.select (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:407:12)\n    at async Inventory.findAll (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1140:21)\n    at async findAll (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\inventory_controller.js:9:23)","timestamp":"2024-01-18 22:54:13"}
{"level":"debug","message":"Executing (default): SELECT `Role`.`IdRol` AS `id`, `Role`.`NombreRol` AS `roleName`, `Role`.`codeRol` AS `roleCode`, `RolePermissions`.`IdRolPermiso` AS `RolePermissions.id`, `RolePermissions`.`IdRol` AS `RolePermissions.roleId`, `RolePermissions`.`IdPermiso` AS `RolePermissions.permissionId`, `RolePermissions->Permission`.`IdPermisos` AS `RolePermissions.Permission.id`, `RolePermissions->Permission`.`NombrePermisos` AS `RolePermissions.Permission.permissionName`, `RolePermissions->Permission`.`Descripcion` AS `RolePermissions.Permission.description` FROM `Roles` AS `Role` LEFT OUTER JOIN `RolesPermisos` AS `RolePermissions` ON `Role`.`IdRol` = `RolePermissions`.`IdRol` LEFT OUTER JOIN `Permisos` AS `RolePermissions->Permission` ON `RolePermissions`.`IdPermiso` = `RolePermissions->Permission`.`IdPermisos` WHERE `Role`.`IdRol` = '1';","service":"Tesis app","timestamp":"2024-01-18 22:54:13"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 22:54:13"}
{"level":"debug","message":"Executing (default): SELECT `Profitability`.`IdRentabilidad` AS `id`, `Profitability`.`IdPlanSiembra2` AS `planningSowing2Id`, `Profitability`.`IdRegistroCostos` AS `costRecordId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id`, `costRecord`.`IdCostos` AS `costRecord.id`, `costRecord`.`FechaRegistro` AS `costRecord.registerDate`, `costRecord`.`Descripcion` AS `costRecord.description`, `costRecord`.`Insumo` AS `costRecord.input`, `costRecord`.`ManoObra` AS `costRecord.labor`, `costRecord`.`Combustible` AS `costRecord.fuel`, `costRecord`.`Total` AS `costRecord.totalCosts`, `costRecord`.`IdUsuarioOperativo` AS `costRecord.operationalUserId` FROM `Rentabilidad` AS `Profitability` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `Profitability`.`IdPlanSiembra2` = `planningSowing2`.`IdPlanSiembra2` LEFT OUTER JOIN `RegistroCostos` AS `costRecord` ON `Profitability`.`IdRegistroCostos` = `costRecord`.`IdCostos`;","service":"Tesis app","timestamp":"2024-01-18 22:54:13"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 22:54:13"}
{"level":"info","message":"Table 'planeacionsiembra.PlanificacionSiembra1' doesn't exist","service":"Tesis app","timestamp":"2024-01-18 22:54:13"}
{"level":"error","message":"Table 'planeacionsiembra.PlanificacionSiembra1' doesn't exist","name":"SequelizeDatabaseError","original":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sql":"SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","sqlMessage":"Table 'planeacionsiembra.PlanificacionSiembra1' doesn't exist","sqlState":"42S02"},"parameters":{},"parent":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sql":"SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","sqlMessage":"Table 'planeacionsiembra.PlanificacionSiembra1' doesn't exist","sqlState":"42S02"},"service":"Tesis app","sql":"SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","stack":"Error\n    at Query.run (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.select (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:407:12)\n    at async PlanningSowing1.findAll (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1140:21)\n    at async findAll (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\planning_controller.js:18:23)","timestamp":"2024-01-18 22:54:13"}
{"level":"info","message":"Table 'planeacionsiembra.RegistroCostos' doesn't exist","service":"Tesis app","timestamp":"2024-01-18 22:54:13"}
{"level":"error","message":"Table 'planeacionsiembra.RegistroCostos' doesn't exist","name":"SequelizeDatabaseError","original":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sql":"SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","sqlMessage":"Table 'planeacionsiembra.RegistroCostos' doesn't exist","sqlState":"42S02"},"parameters":{},"parent":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sql":"SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","sqlMessage":"Table 'planeacionsiembra.RegistroCostos' doesn't exist","sqlState":"42S02"},"service":"Tesis app","sql":"SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","stack":"Error\n    at Query.run (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.select (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:407:12)\n    at async CostRecord.findAll (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1140:21)\n    at async findAll (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\cost_controller.js:64:25)","timestamp":"2024-01-18 22:54:13"}
{"level":"info","message":"Table 'planeacionsiembra.Rentabilidad' doesn't exist","service":"Tesis app","timestamp":"2024-01-18 22:54:13"}
{"level":"error","message":"Table 'planeacionsiembra.Rentabilidad' doesn't exist","name":"SequelizeDatabaseError","original":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sql":"SELECT `Profitability`.`IdRentabilidad` AS `id`, `Profitability`.`IdPlanSiembra2` AS `planningSowing2Id`, `Profitability`.`IdRegistroCostos` AS `costRecordId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id`, `costRecord`.`IdCostos` AS `costRecord.id`, `costRecord`.`FechaRegistro` AS `costRecord.registerDate`, `costRecord`.`Descripcion` AS `costRecord.description`, `costRecord`.`Insumo` AS `costRecord.input`, `costRecord`.`ManoObra` AS `costRecord.labor`, `costRecord`.`Combustible` AS `costRecord.fuel`, `costRecord`.`Total` AS `costRecord.totalCosts`, `costRecord`.`IdUsuarioOperativo` AS `costRecord.operationalUserId` FROM `Rentabilidad` AS `Profitability` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `Profitability`.`IdPlanSiembra2` = `planningSowing2`.`IdPlanSiembra2` LEFT OUTER JOIN `RegistroCostos` AS `costRecord` ON `Profitability`.`IdRegistroCostos` = `costRecord`.`IdCostos`;","sqlMessage":"Table 'planeacionsiembra.Rentabilidad' doesn't exist","sqlState":"42S02"},"parameters":{},"parent":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sql":"SELECT `Profitability`.`IdRentabilidad` AS `id`, `Profitability`.`IdPlanSiembra2` AS `planningSowing2Id`, `Profitability`.`IdRegistroCostos` AS `costRecordId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id`, `costRecord`.`IdCostos` AS `costRecord.id`, `costRecord`.`FechaRegistro` AS `costRecord.registerDate`, `costRecord`.`Descripcion` AS `costRecord.description`, `costRecord`.`Insumo` AS `costRecord.input`, `costRecord`.`ManoObra` AS `costRecord.labor`, `costRecord`.`Combustible` AS `costRecord.fuel`, `costRecord`.`Total` AS `costRecord.totalCosts`, `costRecord`.`IdUsuarioOperativo` AS `costRecord.operationalUserId` FROM `Rentabilidad` AS `Profitability` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `Profitability`.`IdPlanSiembra2` = `planningSowing2`.`IdPlanSiembra2` LEFT OUTER JOIN `RegistroCostos` AS `costRecord` ON `Profitability`.`IdRegistroCostos` = `costRecord`.`IdCostos`;","sqlMessage":"Table 'planeacionsiembra.Rentabilidad' doesn't exist","sqlState":"42S02"},"service":"Tesis app","sql":"SELECT `Profitability`.`IdRentabilidad` AS `id`, `Profitability`.`IdPlanSiembra2` AS `planningSowing2Id`, `Profitability`.`IdRegistroCostos` AS `costRecordId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id`, `costRecord`.`IdCostos` AS `costRecord.id`, `costRecord`.`FechaRegistro` AS `costRecord.registerDate`, `costRecord`.`Descripcion` AS `costRecord.description`, `costRecord`.`Insumo` AS `costRecord.input`, `costRecord`.`ManoObra` AS `costRecord.labor`, `costRecord`.`Combustible` AS `costRecord.fuel`, `costRecord`.`Total` AS `costRecord.totalCosts`, `costRecord`.`IdUsuarioOperativo` AS `costRecord.operationalUserId` FROM `Rentabilidad` AS `Profitability` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `Profitability`.`IdPlanSiembra2` = `planningSowing2`.`IdPlanSiembra2` LEFT OUTER JOIN `RegistroCostos` AS `costRecord` ON `Profitability`.`IdRegistroCostos` = `costRecord`.`IdCostos`;","stack":"Error\n    at Query.run (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.select (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:407:12)\n    at async Profitability.findAll (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1140:21)\n    at async findAll (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\profitability_controller.js:16:27)","timestamp":"2024-01-18 22:54:13"}
{"level":"debug","message":"Executing (default): SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state`, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles`.`IdUser` AS `UserRoles.userId`, `UserRoles`.`IdRol` AS `UserRoles.roleId`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode` FROM `Usuarios` AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`IdUser` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` WHERE `User`.`IdUser` = 1;","service":"Tesis app","timestamp":"2024-01-18 22:57:10"}
{"level":"debug","message":"Executing (default): SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Estado` AS `state`, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode` FROM `Usuarios` AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`IdUser` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` WHERE `User`.`IdUser` != 1;","service":"Tesis app","timestamp":"2024-01-18 22:57:12"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 22:57:12"}
{"level":"debug","message":"Executing (default): SELECT `IdTipoReporte` AS `id`, `NombreReporte` AS `reportName` FROM `TipoReporte` AS `ReportType`;","service":"Tesis app","timestamp":"2024-01-18 22:57:12"}
{"level":"debug","message":"Executing (default): SELECT `IdPermisos` AS `id`, `NombrePermisos` AS `permissionName`, `Descripcion` AS `description` FROM `Permisos` AS `Permission`;","service":"Tesis app","timestamp":"2024-01-18 22:57:12"}
{"level":"debug","message":"Executing (default): SELECT `Role`.`IdRol` AS `id`, `Role`.`NombreRol` AS `roleName`, `Role`.`codeRol` AS `roleCode`, `RolePermissions`.`IdRolPermiso` AS `RolePermissions.id`, `RolePermissions`.`IdRol` AS `RolePermissions.roleId`, `RolePermissions`.`IdPermiso` AS `RolePermissions.permissionId`, `RolePermissions->Permission`.`IdPermisos` AS `RolePermissions.Permission.id`, `RolePermissions->Permission`.`NombrePermisos` AS `RolePermissions.Permission.permissionName`, `RolePermissions->Permission`.`Descripcion` AS `RolePermissions.Permission.description` FROM `Roles` AS `Role` LEFT OUTER JOIN `RolesPermisos` AS `RolePermissions` ON `Role`.`IdRol` = `RolePermissions`.`IdRol` LEFT OUTER JOIN `Permisos` AS `RolePermissions->Permission` ON `RolePermissions`.`IdPermiso` = `RolePermissions->Permission`.`IdPermisos` WHERE `Role`.`IdRol` = '1';","service":"Tesis app","timestamp":"2024-01-18 22:57:12"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 22:57:12"}
{"level":"debug","message":"Executing (default): SELECT `Profitability`.`IdRentabilidad` AS `id`, `Profitability`.`IdPlanSiembra2` AS `planningSowing2Id`, `Profitability`.`IdRegistroCostos` AS `costRecordId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id`, `costRecord`.`IdCostos` AS `costRecord.id`, `costRecord`.`FechaRegistro` AS `costRecord.registerDate`, `costRecord`.`Descripcion` AS `costRecord.description`, `costRecord`.`Insumo` AS `costRecord.input`, `costRecord`.`ManoObra` AS `costRecord.labor`, `costRecord`.`Combustible` AS `costRecord.fuel`, `costRecord`.`Total` AS `costRecord.totalCosts`, `costRecord`.`IdUsuarioOperativo` AS `costRecord.operationalUserId` FROM `Rentabilidad` AS `Profitability` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `Profitability`.`IdPlanSiembra2` = `planningSowing2`.`IdPlanSiembra2` LEFT OUTER JOIN `RegistroCostos` AS `costRecord` ON `Profitability`.`IdRegistroCostos` = `costRecord`.`IdCostos`;","service":"Tesis app","timestamp":"2024-01-18 22:57:12"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 22:57:12"}
{"level":"debug","message":"Executing (default): SELECT `IdRol` AS `id`, `NombreRol` AS `roleName`, `codeRol` AS `roleCode` FROM `Roles` AS `Role` WHERE `Role`.`codeRol` != '001';","service":"Tesis app","timestamp":"2024-01-18 22:59:26"}
{"level":"debug","message":"Executing (default): SELECT `IdPermisos` AS `id`, `NombrePermisos` AS `permissionName`, `Descripcion` AS `description` FROM `Permisos` AS `Permission`;","service":"Tesis app","timestamp":"2024-01-18 22:59:26"}
{"level":"debug","message":"Executing (fdfecf72-0fe2-4418-83fd-65c7e30e9034): START TRANSACTION;","service":"Tesis app","timestamp":"2024-01-18 22:59:37"}
{"level":"debug","message":"Executing (default): SELECT `User`.*, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles`.`IdUser` AS `UserRoles.userId`, `UserRoles`.`IdRol` AS `UserRoles.roleId` FROM (SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state` FROM `Usuarios` AS `User` WHERE (`User`.`IdUser` != 1 AND `User`.`IdUser` = '6') LIMIT 1) AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`id` = `UserRoles`.`IdUser`;","service":"Tesis app","timestamp":"2024-01-18 22:59:38"}
{"level":"debug","message":"Executing (fdfecf72-0fe2-4418-83fd-65c7e30e9034): DELETE FROM `UsuariosRoles` WHERE `IdUserRol` = 6","service":"Tesis app","timestamp":"2024-01-18 22:59:38"}
{"level":"debug","message":"Executing (fdfecf72-0fe2-4418-83fd-65c7e30e9034): DELETE FROM `Usuarios` WHERE `IdUser` = '6'","service":"Tesis app","timestamp":"2024-01-18 22:59:38"}
{"level":"debug","message":"Executing (fdfecf72-0fe2-4418-83fd-65c7e30e9034): COMMIT;","service":"Tesis app","timestamp":"2024-01-18 22:59:38"}
{"level":"debug","message":"Executing (default): SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Estado` AS `state`, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode` FROM `Usuarios` AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`IdUser` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` WHERE `User`.`IdUser` != 1;","service":"Tesis app","timestamp":"2024-01-18 22:59:38"}
{"level":"debug","message":"Executing (013b144e-b74c-405e-8092-9fb852e257c7): START TRANSACTION;","service":"Tesis app","timestamp":"2024-01-18 22:59:42"}
{"level":"debug","message":"Executing (default): SELECT `User`.*, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles`.`IdUser` AS `UserRoles.userId`, `UserRoles`.`IdRol` AS `UserRoles.roleId` FROM (SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state` FROM `Usuarios` AS `User` WHERE (`User`.`IdUser` != 1 AND `User`.`IdUser` = '4') LIMIT 1) AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`id` = `UserRoles`.`IdUser`;","service":"Tesis app","timestamp":"2024-01-18 22:59:42"}
{"level":"debug","message":"Executing (013b144e-b74c-405e-8092-9fb852e257c7): DELETE FROM `UsuariosRoles` WHERE `IdUserRol` = 4","service":"Tesis app","timestamp":"2024-01-18 22:59:42"}
{"level":"debug","message":"Executing (013b144e-b74c-405e-8092-9fb852e257c7): DELETE FROM `Usuarios` WHERE `IdUser` = '4'","service":"Tesis app","timestamp":"2024-01-18 22:59:42"}
{"level":"debug","message":"Executing (013b144e-b74c-405e-8092-9fb852e257c7): ROLLBACK;","service":"Tesis app","timestamp":"2024-01-18 22:59:42"}
{"level":"info","message":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","service":"Tesis app","timestamp":"2024-01-18 22:59:42"}
{"fields":["IdUsuarioOperativo"],"index":"PlanificacionSiembra1_ibfk_1","level":"error","message":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","name":"SequelizeForeignKeyConstraintError","original":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '4'","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","sqlState":"23000"},"parameters":{},"parent":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '4'","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","sqlState":"23000"},"reltype":"parent","service":"Tesis app","sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '4'","stack":"Error\n    at Query.run (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.bulkDelete (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:403:12)\n    at async User.destroy (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1838:16)\n    at async destroy (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\user_controller.js:286:5)","table":"Usuarios","timestamp":"2024-01-18 22:59:42"}
{"level":"debug","message":"Executing (default): SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Estado` AS `state`, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode` FROM `Usuarios` AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`IdUser` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` WHERE `User`.`IdUser` != 1;","service":"Tesis app","timestamp":"2024-01-18 22:59:43"}
{"level":"debug","message":"Executing (default): SELECT `IdRol` AS `id`, `NombreRol` AS `roleName`, `codeRol` AS `roleCode` FROM `Roles` AS `Role`;","service":"Tesis app","timestamp":"2024-01-18 22:59:49"}
{"level":"debug","message":"Executing (default): SELECT `IdRol` AS `id`, `NombreRol` AS `roleName`, `codeRol` AS `roleCode` FROM `Roles` AS `Role`;","service":"Tesis app","timestamp":"2024-01-18 22:59:53"}
{"level":"debug","message":"Executing (8ced4e2b-568e-423a-90ab-6ccac1255c71): START TRANSACTION;","service":"Tesis app","timestamp":"2024-01-18 22:59:57"}
{"level":"debug","message":"Executing (default): SELECT `User`.*, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles`.`IdUser` AS `UserRoles.userId`, `UserRoles`.`IdRol` AS `UserRoles.roleId` FROM (SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state` FROM `Usuarios` AS `User` WHERE (`User`.`IdUser` != 1 AND `User`.`IdUser` = '2') LIMIT 1) AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`id` = `UserRoles`.`IdUser`;","service":"Tesis app","timestamp":"2024-01-18 22:59:58"}
{"level":"debug","message":"Executing (8ced4e2b-568e-423a-90ab-6ccac1255c71): DELETE FROM `UsuariosRoles` WHERE `IdUserRol` = 2","service":"Tesis app","timestamp":"2024-01-18 22:59:58"}
{"level":"debug","message":"Executing (8ced4e2b-568e-423a-90ab-6ccac1255c71): DELETE FROM `Usuarios` WHERE `IdUser` = '2'","service":"Tesis app","timestamp":"2024-01-18 22:59:58"}
{"level":"debug","message":"Executing (8ced4e2b-568e-423a-90ab-6ccac1255c71): ROLLBACK;","service":"Tesis app","timestamp":"2024-01-18 22:59:58"}
{"level":"info","message":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","service":"Tesis app","timestamp":"2024-01-18 22:59:58"}
{"fields":["IdUsuarioOperativo"],"index":"PlanificacionSiembra1_ibfk_1","level":"error","message":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","name":"SequelizeForeignKeyConstraintError","original":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '2'","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","sqlState":"23000"},"parameters":{},"parent":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '2'","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","sqlState":"23000"},"reltype":"parent","service":"Tesis app","sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '2'","stack":"Error\n    at Query.run (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.bulkDelete (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:403:12)\n    at async User.destroy (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1838:16)\n    at async destroy (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\user_controller.js:286:5)","table":"Usuarios","timestamp":"2024-01-18 22:59:58"}
{"level":"debug","message":"Executing (default): SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Estado` AS `state`, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode` FROM `Usuarios` AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`IdUser` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` WHERE `User`.`IdUser` != 1;","service":"Tesis app","timestamp":"2024-01-18 22:59:58"}
{"level":"debug","message":"Executing (73bcc54c-fcd6-4ff6-a0e6-a5fb5e098ff5): START TRANSACTION;","service":"Tesis app","timestamp":"2024-01-18 23:00:05"}
{"level":"debug","message":"Executing (default): SELECT `User`.*, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles`.`IdUser` AS `UserRoles.userId`, `UserRoles`.`IdRol` AS `UserRoles.roleId` FROM (SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state` FROM `Usuarios` AS `User` WHERE (`User`.`IdUser` != 1 AND `User`.`IdUser` = '4') LIMIT 1) AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`id` = `UserRoles`.`IdUser`;","service":"Tesis app","timestamp":"2024-01-18 23:00:05"}
{"level":"debug","message":"Executing (73bcc54c-fcd6-4ff6-a0e6-a5fb5e098ff5): DELETE FROM `UsuariosRoles` WHERE `IdUserRol` = 4","service":"Tesis app","timestamp":"2024-01-18 23:00:05"}
{"level":"debug","message":"Executing (73bcc54c-fcd6-4ff6-a0e6-a5fb5e098ff5): DELETE FROM `Usuarios` WHERE `IdUser` = '4'","service":"Tesis app","timestamp":"2024-01-18 23:00:05"}
{"level":"debug","message":"Executing (73bcc54c-fcd6-4ff6-a0e6-a5fb5e098ff5): ROLLBACK;","service":"Tesis app","timestamp":"2024-01-18 23:00:05"}
{"level":"info","message":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","service":"Tesis app","timestamp":"2024-01-18 23:00:05"}
{"fields":["IdUsuarioOperativo"],"index":"PlanificacionSiembra1_ibfk_1","level":"error","message":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","name":"SequelizeForeignKeyConstraintError","original":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '4'","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","sqlState":"23000"},"parameters":{},"parent":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '4'","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","sqlState":"23000"},"reltype":"parent","service":"Tesis app","sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '4'","stack":"Error\n    at Query.run (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.bulkDelete (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:403:12)\n    at async User.destroy (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1838:16)\n    at async destroy (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\user_controller.js:286:5)","table":"Usuarios","timestamp":"2024-01-18 23:00:05"}
{"level":"debug","message":"Executing (default): SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Estado` AS `state`, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode` FROM `Usuarios` AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`IdUser` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` WHERE `User`.`IdUser` != 1;","service":"Tesis app","timestamp":"2024-01-18 23:00:05"}
{"level":"debug","message":"Executing (default): SELECT `IdPermisos` AS `id`, `NombrePermisos` AS `permissionName`, `Descripcion` AS `description` FROM `Permisos` AS `Permission`;","service":"Tesis app","timestamp":"2024-01-18 23:00:28"}
{"level":"debug","message":"Executing (aa633819-a1d6-4641-bf29-3c0c7ee3f588): START TRANSACTION;","service":"Tesis app","timestamp":"2024-01-18 23:00:34"}
{"level":"debug","message":"Executing (default): SELECT `User`.*, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles`.`IdUser` AS `UserRoles.userId`, `UserRoles`.`IdRol` AS `UserRoles.roleId` FROM (SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state` FROM `Usuarios` AS `User` WHERE (`User`.`IdUser` != 1 AND `User`.`IdUser` = '3') LIMIT 1) AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`id` = `UserRoles`.`IdUser`;","service":"Tesis app","timestamp":"2024-01-18 23:00:35"}
{"level":"debug","message":"Executing (aa633819-a1d6-4641-bf29-3c0c7ee3f588): DELETE FROM `UsuariosRoles` WHERE `IdUserRol` = 3","service":"Tesis app","timestamp":"2024-01-18 23:00:35"}
{"level":"debug","message":"Executing (aa633819-a1d6-4641-bf29-3c0c7ee3f588): DELETE FROM `Usuarios` WHERE `IdUser` = '3'","service":"Tesis app","timestamp":"2024-01-18 23:00:35"}
{"level":"debug","message":"Executing (aa633819-a1d6-4641-bf29-3c0c7ee3f588): ROLLBACK;","service":"Tesis app","timestamp":"2024-01-18 23:00:35"}
{"level":"info","message":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","service":"Tesis app","timestamp":"2024-01-18 23:00:35"}
{"fields":["IdUsuarioOperativo"],"index":"PlanificacionSiembra1_ibfk_1","level":"error","message":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","name":"SequelizeForeignKeyConstraintError","original":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '3'","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","sqlState":"23000"},"parameters":{},"parent":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '3'","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","sqlState":"23000"},"reltype":"parent","service":"Tesis app","sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '3'","stack":"Error\n    at Query.run (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.bulkDelete (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:403:12)\n    at async User.destroy (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1838:16)\n    at async destroy (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\user_controller.js:286:5)","table":"Usuarios","timestamp":"2024-01-18 23:00:35"}
{"level":"debug","message":"Executing (default): SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Estado` AS `state`, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode` FROM `Usuarios` AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`IdUser` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` WHERE `User`.`IdUser` != 1;","service":"Tesis app","timestamp":"2024-01-18 23:00:35"}
{"level":"debug","message":"Executing (d7b70538-80ca-424d-9477-50df93822582): START TRANSACTION;","service":"Tesis app","timestamp":"2024-01-18 23:00:39"}
{"level":"debug","message":"Executing (default): SELECT `User`.*, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles`.`IdUser` AS `UserRoles.userId`, `UserRoles`.`IdRol` AS `UserRoles.roleId` FROM (SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state` FROM `Usuarios` AS `User` WHERE (`User`.`IdUser` != 1 AND `User`.`IdUser` = '4') LIMIT 1) AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`id` = `UserRoles`.`IdUser`;","service":"Tesis app","timestamp":"2024-01-18 23:00:39"}
{"level":"debug","message":"Executing (d7b70538-80ca-424d-9477-50df93822582): DELETE FROM `UsuariosRoles` WHERE `IdUserRol` = 4","service":"Tesis app","timestamp":"2024-01-18 23:00:39"}
{"level":"debug","message":"Executing (d7b70538-80ca-424d-9477-50df93822582): DELETE FROM `Usuarios` WHERE `IdUser` = '4'","service":"Tesis app","timestamp":"2024-01-18 23:00:40"}
{"level":"debug","message":"Executing (d7b70538-80ca-424d-9477-50df93822582): ROLLBACK;","service":"Tesis app","timestamp":"2024-01-18 23:00:40"}
{"level":"info","message":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","service":"Tesis app","timestamp":"2024-01-18 23:00:40"}
{"fields":["IdUsuarioOperativo"],"index":"PlanificacionSiembra1_ibfk_1","level":"error","message":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","name":"SequelizeForeignKeyConstraintError","original":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '4'","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","sqlState":"23000"},"parameters":{},"parent":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '4'","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","sqlState":"23000"},"reltype":"parent","service":"Tesis app","sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '4'","stack":"Error\n    at Query.run (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.bulkDelete (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:403:12)\n    at async User.destroy (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1838:16)\n    at async destroy (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\user_controller.js:286:5)","table":"Usuarios","timestamp":"2024-01-18 23:00:40"}
{"level":"debug","message":"Executing (default): SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Estado` AS `state`, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode` FROM `Usuarios` AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`IdUser` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` WHERE `User`.`IdUser` != 1;","service":"Tesis app","timestamp":"2024-01-18 23:00:40"}
{"level":"debug","message":"Executing (b51014c5-1944-48f0-9ddb-e1b88a00749f): START TRANSACTION;","service":"Tesis app","timestamp":"2024-01-18 23:00:43"}
{"level":"debug","message":"Executing (default): SELECT `User`.*, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles`.`IdUser` AS `UserRoles.userId`, `UserRoles`.`IdRol` AS `UserRoles.roleId` FROM (SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state` FROM `Usuarios` AS `User` WHERE (`User`.`IdUser` != 1 AND `User`.`IdUser` = '3') LIMIT 1) AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`id` = `UserRoles`.`IdUser`;","service":"Tesis app","timestamp":"2024-01-18 23:00:43"}
{"level":"debug","message":"Executing (b51014c5-1944-48f0-9ddb-e1b88a00749f): DELETE FROM `UsuariosRoles` WHERE `IdUserRol` = 3","service":"Tesis app","timestamp":"2024-01-18 23:00:43"}
{"level":"debug","message":"Executing (b51014c5-1944-48f0-9ddb-e1b88a00749f): DELETE FROM `Usuarios` WHERE `IdUser` = '3'","service":"Tesis app","timestamp":"2024-01-18 23:00:43"}
{"level":"debug","message":"Executing (b51014c5-1944-48f0-9ddb-e1b88a00749f): ROLLBACK;","service":"Tesis app","timestamp":"2024-01-18 23:00:43"}
{"level":"info","message":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","service":"Tesis app","timestamp":"2024-01-18 23:00:43"}
{"fields":["IdUsuarioOperativo"],"index":"PlanificacionSiembra1_ibfk_1","level":"error","message":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","name":"SequelizeForeignKeyConstraintError","original":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '3'","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","sqlState":"23000"},"parameters":{},"parent":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '3'","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","sqlState":"23000"},"reltype":"parent","service":"Tesis app","sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '3'","stack":"Error\n    at Query.run (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.bulkDelete (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:403:12)\n    at async User.destroy (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1838:16)\n    at async destroy (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\user_controller.js:286:5)","table":"Usuarios","timestamp":"2024-01-18 23:00:43"}
{"level":"debug","message":"Executing (default): SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Estado` AS `state`, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode` FROM `Usuarios` AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`IdUser` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` WHERE `User`.`IdUser` != 1;","service":"Tesis app","timestamp":"2024-01-18 23:00:43"}
{"level":"debug","message":"Executing (4838c4dc-a200-4c74-96d8-f938c5aa1b89): START TRANSACTION;","service":"Tesis app","timestamp":"2024-01-18 23:00:46"}
{"level":"debug","message":"Executing (default): SELECT `User`.*, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles`.`IdUser` AS `UserRoles.userId`, `UserRoles`.`IdRol` AS `UserRoles.roleId` FROM (SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state` FROM `Usuarios` AS `User` WHERE (`User`.`IdUser` != 1 AND `User`.`IdUser` = '4') LIMIT 1) AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`id` = `UserRoles`.`IdUser`;","service":"Tesis app","timestamp":"2024-01-18 23:00:46"}
{"level":"debug","message":"Executing (4838c4dc-a200-4c74-96d8-f938c5aa1b89): DELETE FROM `UsuariosRoles` WHERE `IdUserRol` = 4","service":"Tesis app","timestamp":"2024-01-18 23:00:46"}
{"level":"debug","message":"Executing (4838c4dc-a200-4c74-96d8-f938c5aa1b89): DELETE FROM `Usuarios` WHERE `IdUser` = '4'","service":"Tesis app","timestamp":"2024-01-18 23:00:46"}
{"level":"debug","message":"Executing (4838c4dc-a200-4c74-96d8-f938c5aa1b89): ROLLBACK;","service":"Tesis app","timestamp":"2024-01-18 23:00:47"}
{"level":"info","message":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","service":"Tesis app","timestamp":"2024-01-18 23:00:47"}
{"fields":["IdUsuarioOperativo"],"index":"PlanificacionSiembra1_ibfk_1","level":"error","message":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","name":"SequelizeForeignKeyConstraintError","original":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '4'","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","sqlState":"23000"},"parameters":{},"parent":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '4'","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`planeacionsiembra`.`PlanificacionSiembra1`, CONSTRAINT `PlanificacionSiembra1_ibfk_1` FOREIGN KEY (`IdUsuarioOperativo`) REFERENCES `Usuarios` (`IdUser`))","sqlState":"23000"},"reltype":"parent","service":"Tesis app","sql":"DELETE FROM `Usuarios` WHERE `IdUser` = '4'","stack":"Error\n    at Query.run (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.bulkDelete (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:403:12)\n    at async User.destroy (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\node_modules\\sequelize\\lib\\model.js:1838:16)\n    at async destroy (C:\\GitHub\\bananotesiscs\\back_tesisbanano\\src\\controllers\\user_controller.js:286:5)","table":"Usuarios","timestamp":"2024-01-18 23:00:47"}
{"level":"debug","message":"Executing (default): SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Estado` AS `state`, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode` FROM `Usuarios` AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`IdUser` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` WHERE `User`.`IdUser` != 1;","service":"Tesis app","timestamp":"2024-01-18 23:00:47"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:01:08"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:01:10"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:01:10"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:01:10"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:01:11"}
{"level":"debug","message":"Executing (default): SELECT `Profitability`.`IdRentabilidad` AS `id`, `Profitability`.`IdPlanSiembra2` AS `planningSowing2Id`, `Profitability`.`IdRegistroCostos` AS `costRecordId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id`, `costRecord`.`IdCostos` AS `costRecord.id`, `costRecord`.`FechaRegistro` AS `costRecord.registerDate`, `costRecord`.`Descripcion` AS `costRecord.description`, `costRecord`.`Insumo` AS `costRecord.input`, `costRecord`.`ManoObra` AS `costRecord.labor`, `costRecord`.`Combustible` AS `costRecord.fuel`, `costRecord`.`Total` AS `costRecord.totalCosts`, `costRecord`.`IdUsuarioOperativo` AS `costRecord.operationalUserId` FROM `Rentabilidad` AS `Profitability` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `Profitability`.`IdPlanSiembra2` = `planningSowing2`.`IdPlanSiembra2` LEFT OUTER JOIN `RegistroCostos` AS `costRecord` ON `Profitability`.`IdRegistroCostos` = `costRecord`.`IdCostos`;","service":"Tesis app","timestamp":"2024-01-18 23:01:11"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:01:11"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:01:11"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:01:13"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:01:13"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:01:13"}
{"level":"debug","message":"Executing (default): SELECT `Profitability`.`IdRentabilidad` AS `id`, `Profitability`.`IdPlanSiembra2` AS `planningSowing2Id`, `Profitability`.`IdRegistroCostos` AS `costRecordId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id`, `costRecord`.`IdCostos` AS `costRecord.id`, `costRecord`.`FechaRegistro` AS `costRecord.registerDate`, `costRecord`.`Descripcion` AS `costRecord.description`, `costRecord`.`Insumo` AS `costRecord.input`, `costRecord`.`ManoObra` AS `costRecord.labor`, `costRecord`.`Combustible` AS `costRecord.fuel`, `costRecord`.`Total` AS `costRecord.totalCosts`, `costRecord`.`IdUsuarioOperativo` AS `costRecord.operationalUserId` FROM `Rentabilidad` AS `Profitability` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `Profitability`.`IdPlanSiembra2` = `planningSowing2`.`IdPlanSiembra2` LEFT OUTER JOIN `RegistroCostos` AS `costRecord` ON `Profitability`.`IdRegistroCostos` = `costRecord`.`IdCostos`;","service":"Tesis app","timestamp":"2024-01-18 23:01:14"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:01:14"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:01:14"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:01:14"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:01:15"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:01:15"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:01:15"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:01:15"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:01:16"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:01:16"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:01:16"}
{"level":"debug","message":"Executing (default): SELECT `Profitability`.`IdRentabilidad` AS `id`, `Profitability`.`IdPlanSiembra2` AS `planningSowing2Id`, `Profitability`.`IdRegistroCostos` AS `costRecordId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id`, `costRecord`.`IdCostos` AS `costRecord.id`, `costRecord`.`FechaRegistro` AS `costRecord.registerDate`, `costRecord`.`Descripcion` AS `costRecord.description`, `costRecord`.`Insumo` AS `costRecord.input`, `costRecord`.`ManoObra` AS `costRecord.labor`, `costRecord`.`Combustible` AS `costRecord.fuel`, `costRecord`.`Total` AS `costRecord.totalCosts`, `costRecord`.`IdUsuarioOperativo` AS `costRecord.operationalUserId` FROM `Rentabilidad` AS `Profitability` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `Profitability`.`IdPlanSiembra2` = `planningSowing2`.`IdPlanSiembra2` LEFT OUTER JOIN `RegistroCostos` AS `costRecord` ON `Profitability`.`IdRegistroCostos` = `costRecord`.`IdCostos`;","service":"Tesis app","timestamp":"2024-01-18 23:01:17"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:01:17"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:01:17"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:01:17"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:01:19"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:01:19"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:01:19"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:01:20"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:01:23"}
{"level":"debug","message":"Executing (default): SELECT `IdPermisos` AS `id`, `NombrePermisos` AS `permissionName`, `Descripcion` AS `description` FROM `Permisos` AS `Permission`;","service":"Tesis app","timestamp":"2024-01-18 23:01:28"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:01:30"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:01:31"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:01:31"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:01:31"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:01:32"}
{"level":"debug","message":"Executing (default): SELECT `Profitability`.`IdRentabilidad` AS `id`, `Profitability`.`IdPlanSiembra2` AS `planningSowing2Id`, `Profitability`.`IdRegistroCostos` AS `costRecordId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id`, `costRecord`.`IdCostos` AS `costRecord.id`, `costRecord`.`FechaRegistro` AS `costRecord.registerDate`, `costRecord`.`Descripcion` AS `costRecord.description`, `costRecord`.`Insumo` AS `costRecord.input`, `costRecord`.`ManoObra` AS `costRecord.labor`, `costRecord`.`Combustible` AS `costRecord.fuel`, `costRecord`.`Total` AS `costRecord.totalCosts`, `costRecord`.`IdUsuarioOperativo` AS `costRecord.operationalUserId` FROM `Rentabilidad` AS `Profitability` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `Profitability`.`IdPlanSiembra2` = `planningSowing2`.`IdPlanSiembra2` LEFT OUTER JOIN `RegistroCostos` AS `costRecord` ON `Profitability`.`IdRegistroCostos` = `costRecord`.`IdCostos`;","service":"Tesis app","timestamp":"2024-01-18 23:01:32"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:01:32"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:01:32"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:01:35"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:01:35"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:01:35"}
{"level":"debug","message":"Executing (default): SELECT `Profitability`.`IdRentabilidad` AS `id`, `Profitability`.`IdPlanSiembra2` AS `planningSowing2Id`, `Profitability`.`IdRegistroCostos` AS `costRecordId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id`, `costRecord`.`IdCostos` AS `costRecord.id`, `costRecord`.`FechaRegistro` AS `costRecord.registerDate`, `costRecord`.`Descripcion` AS `costRecord.description`, `costRecord`.`Insumo` AS `costRecord.input`, `costRecord`.`ManoObra` AS `costRecord.labor`, `costRecord`.`Combustible` AS `costRecord.fuel`, `costRecord`.`Total` AS `costRecord.totalCosts`, `costRecord`.`IdUsuarioOperativo` AS `costRecord.operationalUserId` FROM `Rentabilidad` AS `Profitability` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `Profitability`.`IdPlanSiembra2` = `planningSowing2`.`IdPlanSiembra2` LEFT OUTER JOIN `RegistroCostos` AS `costRecord` ON `Profitability`.`IdRegistroCostos` = `costRecord`.`IdCostos`;","service":"Tesis app","timestamp":"2024-01-18 23:01:36"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:01:36"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:01:36"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:01:36"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:02:00"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:02:00"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:02:00"}
{"level":"debug","message":"Executing (default): SELECT `Profitability`.`IdRentabilidad` AS `id`, `Profitability`.`IdPlanSiembra2` AS `planningSowing2Id`, `Profitability`.`IdRegistroCostos` AS `costRecordId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id`, `costRecord`.`IdCostos` AS `costRecord.id`, `costRecord`.`FechaRegistro` AS `costRecord.registerDate`, `costRecord`.`Descripcion` AS `costRecord.description`, `costRecord`.`Insumo` AS `costRecord.input`, `costRecord`.`ManoObra` AS `costRecord.labor`, `costRecord`.`Combustible` AS `costRecord.fuel`, `costRecord`.`Total` AS `costRecord.totalCosts`, `costRecord`.`IdUsuarioOperativo` AS `costRecord.operationalUserId` FROM `Rentabilidad` AS `Profitability` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `Profitability`.`IdPlanSiembra2` = `planningSowing2`.`IdPlanSiembra2` LEFT OUTER JOIN `RegistroCostos` AS `costRecord` ON `Profitability`.`IdRegistroCostos` = `costRecord`.`IdCostos`;","service":"Tesis app","timestamp":"2024-01-18 23:02:01"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:02:01"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:02:01"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:02:01"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:02:01"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:02:02"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:02:02"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:02:02"}
{"level":"debug","message":"Executing (default): SELECT `Profitability`.`IdRentabilidad` AS `id`, `Profitability`.`IdPlanSiembra2` AS `planningSowing2Id`, `Profitability`.`IdRegistroCostos` AS `costRecordId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id`, `costRecord`.`IdCostos` AS `costRecord.id`, `costRecord`.`FechaRegistro` AS `costRecord.registerDate`, `costRecord`.`Descripcion` AS `costRecord.description`, `costRecord`.`Insumo` AS `costRecord.input`, `costRecord`.`ManoObra` AS `costRecord.labor`, `costRecord`.`Combustible` AS `costRecord.fuel`, `costRecord`.`Total` AS `costRecord.totalCosts`, `costRecord`.`IdUsuarioOperativo` AS `costRecord.operationalUserId` FROM `Rentabilidad` AS `Profitability` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `Profitability`.`IdPlanSiembra2` = `planningSowing2`.`IdPlanSiembra2` LEFT OUTER JOIN `RegistroCostos` AS `costRecord` ON `Profitability`.`IdRegistroCostos` = `costRecord`.`IdCostos`;","service":"Tesis app","timestamp":"2024-01-18 23:02:03"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:02:03"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:02:04"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:02:04"}
{"level":"debug","message":"Executing (default): SELECT `IdPermisos` AS `id`, `NombrePermisos` AS `permissionName`, `Descripcion` AS `description` FROM `Permisos` AS `Permission`;","service":"Tesis app","timestamp":"2024-01-18 23:02:08"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:02:09"}
{"level":"debug","message":"Executing (default): SELECT `Profitability`.`IdRentabilidad` AS `id`, `Profitability`.`IdPlanSiembra2` AS `planningSowing2Id`, `Profitability`.`IdRegistroCostos` AS `costRecordId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id`, `costRecord`.`IdCostos` AS `costRecord.id`, `costRecord`.`FechaRegistro` AS `costRecord.registerDate`, `costRecord`.`Descripcion` AS `costRecord.description`, `costRecord`.`Insumo` AS `costRecord.input`, `costRecord`.`ManoObra` AS `costRecord.labor`, `costRecord`.`Combustible` AS `costRecord.fuel`, `costRecord`.`Total` AS `costRecord.totalCosts`, `costRecord`.`IdUsuarioOperativo` AS `costRecord.operationalUserId` FROM `Rentabilidad` AS `Profitability` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `Profitability`.`IdPlanSiembra2` = `planningSowing2`.`IdPlanSiembra2` LEFT OUTER JOIN `RegistroCostos` AS `costRecord` ON `Profitability`.`IdRegistroCostos` = `costRecord`.`IdCostos`;","service":"Tesis app","timestamp":"2024-01-18 23:02:10"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:02:10"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:02:10"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:02:10"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:02:12"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:02:12"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:02:12"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:02:12"}
{"level":"debug","message":"Executing (default): SELECT `User`.*, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode`, `UserRoles->Role->RolePermissions`.`IdRolPermiso` AS `UserRoles.Role.RolePermissions.id`, `UserRoles->Role->RolePermissions->Permission`.`IdPermisos` AS `UserRoles.Role.RolePermissions.Permission.id`, `UserRoles->Role->RolePermissions->Permission`.`NombrePermisos` AS `UserRoles.Role.RolePermissions.Permission.permissionName`, `UserRoles->Role->RolePermissions->Permission`.`Descripcion` AS `UserRoles.Role.RolePermissions.Permission.description` FROM (SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state` FROM `Usuarios` AS `User` WHERE `User`.`CorreoElectronico` = 'angie19980925@gmail.com' LIMIT 1) AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`id` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` LEFT OUTER JOIN `RolesPermisos` AS `UserRoles->Role->RolePermissions` ON `UserRoles->Role`.`IdRol` = `UserRoles->Role->RolePermissions`.`IdRol` LEFT OUTER JOIN `Permisos` AS `UserRoles->Role->RolePermissions->Permission` ON `UserRoles->Role->RolePermissions`.`IdPermiso` = `UserRoles->Role->RolePermissions->Permission`.`IdPermisos`;","service":"Tesis app","timestamp":"2024-01-18 23:05:43"}
{"level":"debug","message":"Executing (default): SELECT `IdPermisos` AS `id`, `NombrePermisos` AS `permissionName`, `Descripcion` AS `description` FROM `Permisos` AS `Permission`;","service":"Tesis app","timestamp":"2024-01-18 23:05:49"}
{"level":"debug","message":"Executing (default): SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state`, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles`.`IdUser` AS `UserRoles.userId`, `UserRoles`.`IdRol` AS `UserRoles.roleId`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode` FROM `Usuarios` AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`IdUser` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` WHERE `User`.`IdUser` = 1;","service":"Tesis app","timestamp":"2024-01-18 23:06:20"}
{"level":"debug","message":"Executing (default): SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Estado` AS `state`, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode` FROM `Usuarios` AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`IdUser` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` WHERE `User`.`IdUser` != 1;","service":"Tesis app","timestamp":"2024-01-18 23:06:24"}
{"level":"debug","message":"Executing (default): SELECT `IdRol` AS `id`, `NombreRol` AS `roleName`, `codeRol` AS `roleCode` FROM `Roles` AS `Role` WHERE `Role`.`codeRol` != '001';","service":"Tesis app","timestamp":"2024-01-18 23:06:24"}
{"level":"debug","message":"Executing (default): SELECT `IdPermisos` AS `id`, `NombrePermisos` AS `permissionName`, `Descripcion` AS `description` FROM `Permisos` AS `Permission`;","service":"Tesis app","timestamp":"2024-01-18 23:06:24"}
{"level":"debug","message":"Executing (default): SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Contrasena` AS `password`, `User`.`Estado` AS `state`, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles`.`IdUser` AS `UserRoles.userId`, `UserRoles`.`IdRol` AS `UserRoles.roleId`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode` FROM `Usuarios` AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`IdUser` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` WHERE `User`.`IdUser` = 1;","service":"Tesis app","timestamp":"2024-01-18 23:06:51"}
{"level":"debug","message":"Executing (default): SELECT `User`.`IdUser` AS `id`, `User`.`NombreUser` AS `firstName`, `User`.`ApellidoUser` AS `lastName`, `User`.`CorreoElectronico` AS `email`, `User`.`Estado` AS `state`, `UserRoles`.`IdUserRol` AS `UserRoles.id`, `UserRoles->Role`.`IdRol` AS `UserRoles.Role.id`, `UserRoles->Role`.`NombreRol` AS `UserRoles.Role.roleName`, `UserRoles->Role`.`codeRol` AS `UserRoles.Role.roleCode` FROM `Usuarios` AS `User` LEFT OUTER JOIN `UsuariosRoles` AS `UserRoles` ON `User`.`IdUser` = `UserRoles`.`IdUser` LEFT OUTER JOIN `Roles` AS `UserRoles->Role` ON `UserRoles`.`IdRol` = `UserRoles->Role`.`IdRol` WHERE `User`.`IdUser` != 1;","service":"Tesis app","timestamp":"2024-01-18 23:06:54"}
{"level":"debug","message":"Executing (default): SELECT `IdPermisos` AS `id`, `NombrePermisos` AS `permissionName`, `Descripcion` AS `description` FROM `Permisos` AS `Permission`;","service":"Tesis app","timestamp":"2024-01-18 23:06:54"}
{"level":"debug","message":"Executing (default): SELECT `IdRol` AS `id`, `NombreRol` AS `roleName`, `codeRol` AS `roleCode` FROM `Roles` AS `Role` WHERE `Role`.`codeRol` != '001';","service":"Tesis app","timestamp":"2024-01-18 23:06:54"}
{"level":"debug","message":"Executing (default): SELECT `IdPermisos` AS `id`, `NombrePermisos` AS `permissionName`, `Descripcion` AS `description` FROM `Permisos` AS `Permission`;","service":"Tesis app","timestamp":"2024-01-18 23:06:59"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:07:01"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:07:04"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:07:09"}
{"level":"debug","message":"Executing (default): SELECT `IdInventario` AS `id`, `Codigo` AS `codigo`, `FechaCompra` AS `purchaseDate`, `Descripcion` AS `description`, `Medida` AS `medida`, `Producto` AS `product`, `Cantidad` AS `quantity`, `PrecioUnitario` AS `unitPrice` FROM `Inventario` AS `Inventory`;","service":"Tesis app","timestamp":"2024-01-18 23:07:12"}
{"level":"debug","message":"Executing (default): SELECT `PlanningSowing1`.`IdPlanSiembra1` AS `id`, `PlanningSowing1`.`CondicionClimatica` AS `climaticCondition`, `PlanningSowing1`.`NombreSemillas` AS `seedName`, `PlanningSowing1`.`VariedadBanano` AS `bananaVariety`, `PlanningSowing1`.`CantidadFertilizanteKG` AS `fertilizerQuantityKG`, `PlanningSowing1`.`CantidadPesticidasKG` AS `pesticideQuantityKG`, `PlanningSowing1`.`FechaFumigacionArea` AS `fumigationDate`, `PlanningSowing1`.`Riego` AS `irrigation`, `PlanningSowing1`.`IdUsuarioOperativo` AS `operationalUserId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id` FROM `PlanificacionSiembra1` AS `PlanningSowing1` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `PlanningSowing1`.`IdPlanSiembra1` = `planningSowing2`.`IdPlanSiembra1`;","service":"Tesis app","timestamp":"2024-01-18 23:07:12"}
{"level":"debug","message":"Executing (default): SELECT `IdPermisos` AS `id`, `NombrePermisos` AS `permissionName`, `Descripcion` AS `description` FROM `Permisos` AS `Permission`;","service":"Tesis app","timestamp":"2024-01-18 23:07:12"}
{"level":"debug","message":"Executing (default): SELECT `IdTipoReporte` AS `id`, `NombreReporte` AS `reportName` FROM `TipoReporte` AS `ReportType`;","service":"Tesis app","timestamp":"2024-01-18 23:07:12"}
{"level":"debug","message":"Executing (default): SELECT `Role`.`IdRol` AS `id`, `Role`.`NombreRol` AS `roleName`, `Role`.`codeRol` AS `roleCode`, `RolePermissions`.`IdRolPermiso` AS `RolePermissions.id`, `RolePermissions`.`IdRol` AS `RolePermissions.roleId`, `RolePermissions`.`IdPermiso` AS `RolePermissions.permissionId`, `RolePermissions->Permission`.`IdPermisos` AS `RolePermissions.Permission.id`, `RolePermissions->Permission`.`NombrePermisos` AS `RolePermissions.Permission.permissionName`, `RolePermissions->Permission`.`Descripcion` AS `RolePermissions.Permission.description` FROM `Roles` AS `Role` LEFT OUTER JOIN `RolesPermisos` AS `RolePermissions` ON `Role`.`IdRol` = `RolePermissions`.`IdRol` LEFT OUTER JOIN `Permisos` AS `RolePermissions->Permission` ON `RolePermissions`.`IdPermiso` = `RolePermissions->Permission`.`IdPermisos` WHERE `Role`.`IdRol` = '1';","service":"Tesis app","timestamp":"2024-01-18 23:07:12"}
{"level":"debug","message":"Executing (default): SELECT `Profitability`.`IdRentabilidad` AS `id`, `Profitability`.`IdPlanSiembra2` AS `planningSowing2Id`, `Profitability`.`IdRegistroCostos` AS `costRecordId`, `planningSowing2`.`IdPlanSiembra2` AS `planningSowing2.id`, `planningSowing2`.`FechaSiembra` AS `planningSowing2.sowingDate`, `planningSowing2`.`FechaSiembraFin` AS `planningSowing2.sowingDateEnd`, `planningSowing2`.`TiempoEstimadoSiembra` AS `planningSowing2.estimatedSowingTime`, `planningSowing2`.`NumeroRacimos` AS `planningSowing2.numberOfBunches`, `planningSowing2`.`NumeroRacimosRechazados` AS `planningSowing2.rejectedBunches`, `planningSowing2`.`PesoPromedioRacimo` AS `planningSowing2.averageBunchWeight`, `planningSowing2`.`NumeroLote` AS `planningSowing2.batchNumber`, `planningSowing2`.`IdPlanSiembra1` AS `planningSowing2.planningSowing1Id`, `costRecord`.`IdCostos` AS `costRecord.id`, `costRecord`.`FechaRegistro` AS `costRecord.registerDate`, `costRecord`.`Descripcion` AS `costRecord.description`, `costRecord`.`Insumo` AS `costRecord.input`, `costRecord`.`ManoObra` AS `costRecord.labor`, `costRecord`.`Combustible` AS `costRecord.fuel`, `costRecord`.`Total` AS `costRecord.totalCosts`, `costRecord`.`IdUsuarioOperativo` AS `costRecord.operationalUserId` FROM `Rentabilidad` AS `Profitability` LEFT OUTER JOIN `PlanificacionSiembra2` AS `planningSowing2` ON `Profitability`.`IdPlanSiembra2` = `planningSowing2`.`IdPlanSiembra2` LEFT OUTER JOIN `RegistroCostos` AS `costRecord` ON `Profitability`.`IdRegistroCostos` = `costRecord`.`IdCostos`;","service":"Tesis app","timestamp":"2024-01-18 23:07:12"}
{"level":"debug","message":"Executing (default): SELECT `IdCostos` AS `id`, `FechaRegistro` AS `registerDate`, `Descripcion` AS `description`, `Insumo` AS `input`, `ManoObra` AS `labor`, `Combustible` AS `fuel`, `Total` AS `totalCosts`, `IdUsuarioOperativo` AS `operationalUserId` FROM `RegistroCostos` AS `CostRecord`;","service":"Tesis app","timestamp":"2024-01-18 23:07:12"}
